{"ast":null,"code":"var _jsxFileName = \"/Users/harsh/Downloads/deploy-out/src/components/GameRules.js\";\nimport React from 'react';\nimport './GameRules.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameRules = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"rules\",\n    className: \"game-rules-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How to Play Andar Bahar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"A single card is placed face up in the center of the table. This card is known as the 'joker' card.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"The dealer then starts dealing cards to the left ('Andar') and right ('Bahar') of the joker card.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"The objective of the game is to predict whether a card of the same rank as the joker card will appear in the Andar side or Bahar side first.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Players place their bets on either Andar or Bahar before the dealing begins.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"The dealer deals one card to Andar, then one card to Bahar, and continues alternating until a card matching the joker card is dealt.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"If the matching card appears on the side you bet on, you win!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = GameRules;\nexport default GameRules;\nvar _c;\n$RefreshReg$(_c, \"GameRules\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GameRules","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harsh/Downloads/deploy-out/src/components/GameRules.js"],"sourcesContent":["import React from 'react';\r\nimport './GameRules.css';\r\n\r\nconst GameRules = () => {\r\n  return (\r\n    <div  id='rules' className=\"game-rules-container\">\r\n      <h1>How to Play Andar Bahar</h1>\r\n      <ol>\r\n        <li>A single card is placed face up in the center of the table. This card is known as the 'joker' card.</li>\r\n        <li>The dealer then starts dealing cards to the left ('Andar') and right ('Bahar') of the joker card.</li>\r\n        <li>The objective of the game is to predict whether a card of the same rank as the joker card will appear in the Andar side or Bahar side first.</li>\r\n        <li>Players place their bets on either Andar or Bahar before the dealing begins.</li>\r\n        <li>The dealer deals one card to Andar, then one card to Bahar, and continues alternating until a card matching the joker card is dealt.</li>\r\n        <li>If the matching card appears on the side you bet on, you win!</li>\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameRules;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,oBACED,OAAA;IAAME,EAAE,EAAC,OAAO;IAACC,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBAC/CJ,OAAA;MAAAI,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCR,OAAA;MAAAI,QAAA,gBACEJ,OAAA;QAAAI,QAAA,EAAI;MAAmG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5GR,OAAA;QAAAI,QAAA,EAAI;MAAiG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1GR,OAAA;QAAAI,QAAA,EAAI;MAA4I;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrJR,OAAA;QAAAI,QAAA,EAAI;MAA4E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrFR,OAAA;QAAAI,QAAA,EAAI;MAAoI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7IR,OAAA;QAAAI,QAAA,EAAI;MAA6D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACC,EAAA,GAdIR,SAAS;AAgBf,eAAeA,SAAS;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}